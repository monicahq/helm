image:
  # -- The monica image repository to pull from
  repository: ghcr.io/monicahq/monica-next  # @schema required:true
  # -- The monica image tag to pull
  tag: main  # @schema required:true
  # repository: monica
  # tag: 5.0-apache
  # -- The monica image pull policy
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets.
  pullSecrets: []
  #   - myRegistrKeySecretName

# -- Add a suffix to the name of the chart
nameOverride: ""
# -- Override the fullname of the chart
fullnameOverride: ""
# -- Annotations to be added at 'pod' level
podAnnotations: {}
# -- Labels to be added at 'pod' level
podLabels: {}
# -- Annotations to be added at 'deployment' level
deploymentAnnotations: {}
# -- Labels to be added at 'deployment' level
deploymentLabels: {}

# -- Number of pods to be deployed
replicaCount: 1

## Allowing use of ingress controllers
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  # -- Enable ingress controller resource
  enabled: false
  # -- Name of the ingress class to use
  className: ""
  # -- Ingress service annotations
  annotations: {}
    # nginx.ingress.kubernetes.io/proxy-body-size: 4G
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
    # nginx.ingress.kubernetes.io/server-snippet: |-
    #   server_tokens off;
    #   proxy_hide_header X-Powered-By;
    #   location = /.well-known/carddav {
    #     return 301 $scheme://$host/dav;
    #   }
    #   location = /.well-known/caldav {
    #     return 301 $scheme://$host/dav;
    #   }
    #   location = /.well-known/security.txt {
    #     return 301 $scheme://$host/security.txt;
    #   }
    #   location = /robots.txt {
    #     allow all;
    #     log_not_found off;
    #     access_log off;
    #   }
  # -- Ingress TLS configuration
  tls: []
    # - secretName: monica-tls
    #   hosts:
    #     - monica.kube.home
  # -- An array of service labels
  labels: {}
  # -- The Path to use in Ingress' paths
  path: /
  # -- The PathType to use in Ingress' paths
  pathType: Prefix


# -- Allow configuration of lifecycle hooks.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
lifecycle: {}
  # postStartCommand: []
  # preStopCommand: []

monica:
  # -- Application URL
  host: monica.kube.home
  ## Use an existing secret
  existingSecret:
    # -- Use an existing secret. If enabled, you need to set: `secretName`, `appKey`, `mailUsernameKey`, `mailPasswordKey`
    enabled: false
    # secretName: nameofsecret
    # appKey: base64_key
    # mailUsernameKey: smtp_username
    # mailPasswordKey: smtp_password
  # -- Customize container port
  containerPort: 80
  # -- Monica storage directory
  storagedir: /var/www/html/storage
  mail:
    # -- Enable email service
    enabled: false
    # -- Email `from` address
    fromAddress: user
    # -- Email `reply-to` address
    replyToAddress: user
    smtp:
      # -- SMTP host
      host: domain.com
      # -- SMTP encryption
      encryption: tls
      # -- SMTP port
      port: 465
      # -- SMTP username
      username: user
      # -- SMTP password
      password: pass
  # -- PHP Configuration files.
  # Will be injected in /usr/local/etc/php/conf.d for apache image and in /usr/local/etc/php-fpm.d when nginx.enabled: true
  phpConfigs: {}

  # -- Strategy used to replace old pods.
  # IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes.
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    type: Recreate
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 1
    #   maxUnavailable: 0

  # -- Extra environment variables
  extraEnv: []
  #  - name: SOME_SECRET_ENV
  #    valueFrom:
  #      secretKeyRef:
  #        name: monica
  #        key: secret_key

  # -- Extra init containers that runs before pods start.
  extraInitContainers: []
  #  - name: do-something
  #    image: busybox
  #    command: ['do', 'something']

  # -- Extra sidecar containers.
  extraSidecarContainers: []
  #  - name: monica-logger
  #    image: busybox
  #    command: [/bin/sh, -c, 'while ! test -f "/run/monica/data/monica.log"; do sleep 1; done; tail -n+1 -f /run/monica/data/monica.log']
  #    volumeMounts:
  #      - name: monica-storage
  #        mountPath: /run/monica/data

  # -- Extra volumes for the pods.
  extraVolumes: []
  #  - name: nfs
  #    nfs:
  #      server: "10.0.0.1"
  #      path: "/var/www/html/storage"
  #      readOnly: false
  # -- Extra mounts for the pods.
  extraVolumeMounts: []
  #  - name: nfs
  #    mountPath: "/var/www/html/storage"

  ##
  ## Cronjob to execute monica scheduled tasks
  ##
  cronjob:
    # -- Enable cronjob to execute monica scheduled tasks
    enabled: false

    # -- cronjob resources definition (limits, requests)
    resources: {}

  ##
  ## Queue job to execute monica background tasks
  ##  Use in addition to a `QUEUE_CONNECTION` variable
  ##
  queue:
    # -- Enable queue job to execute monica background tasks. Use in addition to a `QUEUE_CONNECTION` variable.
    enabled: false

    # -- Allow configuration of lifecycle hooks.
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
    lifecycle: {}
      # postStartCommand: []
      # preStopCommand: []

    # -- queue job resources definition (limits, requests)
    resources: {}

    # @ignored
    priorityClassName: important
    # @ignored
    terminationGracePeriodSeconds: 20


nginx:
  # -- Enable nginx. You need to set an fpm version of the image for monica if you want to use nginx.
  enabled: false
  image:
    # -- The nginx image repository to pull from
    repository: nginx
    # -- The nginx image tag to pull
    tag: alpine
    # -- The nginx image pull policy
    pullPolicy: IfNotPresent

  # -- Customize container port
  containerPort: 80
  config:
    # -- Generates the default nginx config
    default: true
    # -- Custom nginx configuration
    custom: ""
    #  worker_processes  1;..

  # -- nginx resources definition (limits, requests)
  resources: {}

##
## Internal database configuration (SQLite)
##
internalDatabase:
  # -- Enable internal (SQLite) database
  enabled: true
  # -- Database fullpath file
  name: /var/www/html/database/monica.sqlite

##
## External database configuration
##
externalDatabase:
  # -- Enable external database
  enabled: false
  # -- Database type. Supported database engines: `mysql` or `postgresql`
  type: mysql
  # -- Database host
  host: ""
  # -- Database user
  user: monica
  # -- Database password
  password: secret
  # -- Database name
  database: monica

  ## Use an existing secret
  existingSecret:
    # -- Use an existing secret. If enabled set: `secretName`, `usernameKey`, `passwordKey`
    enabled: false
    # secretName: nameofsecret
    # usernameKey: username
    # passwordKey: password

##
## MariaDB chart configuration
## for more options see https://github.com/bitnami/charts/tree/master/bitnami/mariadb
##
mariadb:
  # -- Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: false

  auth:
    # -- Database name
    database: monica
    # -- Database user
    username: monica
    # -- Database password
    password: secret

  # -- MariaDB architecture: `standalone` or `replication`
  architecture: standalone

  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  primary:
    persistence:
      # -- Enable MariaDB persistence using Persistent Volume Claims
      enabled: false
      # -- Use an existing Persistent Volume Claim (must be created ahead of time)
      existingClaim: ""
      # -- Storage class of backing PVC
      storageClass: ""
      # -- Access Mode for the PVC
      accessMode: ReadWriteOnce
      # -- PVC Storage Request
      size: 8Gi

##
## PostgreSQL chart configuration
## for more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
##
postgresql:
  # -- Whether to deploy a postgresql server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
  enabled: false
  global:
    postgresql:
      auth:
        # -- Database name
        database: monica
        # -- Database user
        username: monica
        # -- Database password
        password: secret

  primary:
    persistence:
      # -- Enable PostgreSQL persistence using Persistent Volume Claims
      enabled: false
      # -- Use an existing Persistent Volume Claim (must be created ahead of time)
      existingClaim: ""
      # -- Storage class of backing PVC
      storageClass: ""

##
## Redis chart configuration
## for more options see https://github.com/bitnami/charts/tree/master/bitnami/redis
##
redis:
  # -- Enable Redis. Use with a `QUEUE_CONNECTION=redis` variable (can also be used for `CACHE_STORE` and `SESSION_DRIVER`).
  enabled: false
  auth:
    # -- Enable redis authentication
    enabled: true
    # -- Redis password
    password: secret
    # -- Name of an existing secret with Redis credentials (instead of auth.password), must be created ahead of time
    existingSecret: ""
    # -- Password key to be retrieved from existing secret
    existingSecretPasswordKey: ""
  global:
    # -- Storage class of backing PVC for Redis
    storageClass: ""
  # @ignored
  master:
    persistence:
      enabled: true
  # @ignored
  replica:
    persistence:
      enabled: true

##
## Memcached chart configuration
## for more options see https://github.com/bitnami/charts/tree/main/bitnami/memcached
##
memcached:
  # -- Enable Memcached. Use with a `CACHE_STORE=memcached` variable (can also be used for `SESSION_DRIVER`).
  enabled: false
  auth:
    # -- Enable memcached authentication
    enabled: true
    # -- Memcached user
    username: monica
    # -- Memcached password
    password: secret
    # -- Name of an existing secret with Memcached credentials (instead of auth.password), must be created ahead of time
    existingSecret: ""
    # -- Password key to be retrieved from existing secret
    existingSecretPasswordKey: ""
  containerSecurityContext:
    # @ignored
    readOnlyRootFilesystem: false

##
## Meilisearch chart configuration
## for more options see https://github.com/meilisearch/meilisearch-kubernetes/tree/main/charts/meilisearch
##
meilisearch:
  # -- Enable Meilisearch. Use with `SCOUT_DRIVER=meilisearch` and `SCOUT_QUEUE=true` variables.
  enabled: false
  environment:
    MEILI_ENV: production
    # MEILI_MASTER_KEY
  # auth:
  #   existingMasterKeySecret

service:
  # -- Service type
  type: ClusterIP  # @schema enum:[ClusterIP, LoadBalancer, NodePort, null]
  # -- Service port
  port: 8080
  # -- Load Balancer IP (optional, only works with service.type LoadBalancer)
  loadBalancerIP: ""
  # -- Load Balancer Class (optional, only works with service.type LoadBalancer)
  loadBalancerClass: ""
  # -- Node Port (optional, only works with service.type NodePort)
  nodePort:  # @schema type:[integer, null]
  # -- Service annotations
  annotations: {}
    ## Insert your annotations such as below
    # test/test: pumuckel
  # -- Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  sessionAffinity: None  # @schema enum:[ClusterIP, None]
  # -- Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  sessionAffinityConfig: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  # -- Enable Monica persistence using Persistent Volume Claims
  enabled: false
  # -- Persistent Volume Claim annotations
  annotations: {}
  # -- Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner. (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  storageClass: ""

  # -- A manually managed Persistent Volume and Claim
  #  Requires persistence.enabled: true
  #  If defined, PVC must be created manually before volume will be bound
  existingClaim: ""

  # -- Persistent Volume Access Mode
  accessMode: ReadWriteOnce
  # -- Persistent Volume Storage Request
  size: 4Gi

# -- Define resources requests and limits for the pod (limits, requests)
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
  # -- Enable liveness probe
  enabled: true
  # -- Delay before this probe is initiated
  initialDelaySeconds: 10
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive failures for the probe
  failureThreshold: 3
  # -- Minimum consecutive successes for the probe
  successThreshold: 1
readinessProbe:
  # -- Enable readiness probe
  enabled: true
  # -- Delay before this probe is initiated
  initialDelaySeconds: 10
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive failures for the probe
  failureThreshold: 3
  # -- Minimum consecutive successes for the probe
  successThreshold: 1
startupProbe:
  # -- Enable startup probe
  enabled: false
  # -- Delay before this probe is initiated
  initialDelaySeconds: 30
  # -- How often to perform the probe
  periodSeconds: 10
  # -- When the probe times out
  timeoutSeconds: 5
  # -- Minimum consecutive failures for the probe
  failureThreshold: 30
  # -- Minimum consecutive successes for the probe
  successThreshold: 1


## Enable pod autoscaling using HorizontalPodAutoscaler
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:
  # -- Enable autoscaling
  enabled: false
  # -- Minimum number of replicas to scale back
  minReplicas:  # @schema type:[integer, null]
  # -- Maximum number of replicas to scale out
  maxReplicas:  # @schema type:[integer, null]
  # -- Target CPU utilization percentage
  targetCPU:  # @schema type:[integer, null]
  # -- Target Memory utilization percentage
  targetMemory:  # @schema type:[integer, null]


# -- Node labels for pod assignment
nodeSelector: {}

# -- Tolerations for pod assignment
tolerations: []

# -- Affinity for pod assignment
affinity: {}

rbac:
  # -- Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  #  If not set and create is true, a name is generated using the fullname template
  name: ""

# @ignored
tests:
  unitTests:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
